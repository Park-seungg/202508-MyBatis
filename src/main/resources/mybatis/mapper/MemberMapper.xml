<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.back.domain.member.member.repository.MemberRepository">

    <!-- 다중 회원 조회 -->
    <select id="findAll" resultType="Member">
        SELECT * FROM member
    </select>

    <!-- 단일 회원 조회(아이디로 조회) -->
    <select id="findById" resultType="Member">
        SELECT * FROM member WHERE id = #{id}
    </select>

    <!-- 단일 회원 조회(username으로 조회) -->
    <select id="findByUsername" resultType="Member">
        SELECT * FROM member WHERE username = #{username}
    </select>

    <!-- 회원 생성 -->
    <insert id="create" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO member
        SET createDate = NOW(),
            modifyDate = NOW(),
            username = #{username},
            password = #{password},
            name = #{name},
            email = #{email}
    </insert>

    <!-- 회원 삭제 -->
    <delete id="deleteById">
        DELETE FROM member WHERE id = #{id}
    </delete>

    <!-- 회원 수정 -->
    <update id="update">
            UPDATE member
            <set>
                modifyDate = NOW(),
                <if test="username != null and username != ''">
                    username = #{username},
                </if>
                <if test="password != null and password != ''">
                    password = #{password},
                </if>
                <if test="name != null and name != ''">
                    name = #{name},
                </if>
                <if test="email != null and email != ''">
                    email = #{email},
                </if>
            </set>
            <where>
                <if test="id != null and id > 0">
                    id = #{id}
                </if>
            </where>
    </update>

    <select id="search" resultType="Member">
        SELECT * FROM member
        <where>
            <choose>
                <when test="kwType == 'username'">
                    username LIKE CONCAT('%', #{kw}, '%')
                </when>
                <when test="kwType == 'name'">
                    name LIKE CONCAT('%', #{kw}, '%')
                </when>
                <when test="kwType == 'email'">
                    email LIKE CONCAT('%', #{kw}, '%')
                </when>
                <otherwise>
                    username LIKE CONCAT('%', #{kw}, '%')
                    OR
                    name LIKE CONCAT('%', #{kw}, '%')
                    OR
                    email LIKE CONCAT('%', #{kw}, '%')
                </otherwise>
            </choose>
        </where>
    </select>

    <delete id="deleteByIds">
        DELETE FROM member
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>